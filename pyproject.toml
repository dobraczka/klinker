[tool.poetry]
name = "klinker"
version = "0.1.0"
description = "blocking methods for entity resolution"
authors = ["Daniel Obraczka <obraczka@informatik.uni-leipzig.de>"]
license = "MIT"
readme = "README.md"
keywords = ["entity resolution", "blocking", "filtering", "data integration", "entity alignment"]
classifiers = ["Development Status :: 4 - Beta", "Programming Language :: Python", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3 :: Only"]
repository = "https://github.com/dobraczka/klinker"
packages = [
  {include = "klinker", from = "src"},
  {include = "klinker/py.typed", from = "src"},
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/dobraczka/klinker/issues"
"Source" = "https://github.com/dobraczka/klinker"
"Documentation" = "https://klinker.readthedocs.io"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
mkdocs = {version = "^1.4.2", optional = true}
mkdocs-material = {version = "^9.0.9", optional = true}
mkdocstrings = {extras = ["python"], version = "^0.20.0", optional = true}
mkdocs-literate-nav = {version = "^0.6.0", optional = true}
mkdocs-gen-files = {version = "^0.4.0", optional = true}
mkdocs-section-index = {version = "^0.3.5", optional = true}
pandas = "^1.5.3"
numpy = "^1.24.2"
datasketch = "^1.5.9"
kiez = "^0.5.0"
sylloge = {git = "https://github.com/dobraczka/sylloge.git"}
hdbscan = "^0.8.32"
sentence-transformers = {version = "^2.2.2", optional = true}
more-itertools = "^9.1.0"
nltk = "^3.8.1"
dask = ">=2023.4.1"
pyarrow = "*"
nephelai = ">=0.2"
deprecated = "^1.2.14"
transformers = {version = "^4.27.3", optional = true}
torch = {version = "==2.0.0", optional = true}
fasttext-wheel = {version = "^0.9.2", optional = true}
gensim = {version = "^4.3.1", optional = true}
click = {version = "^8.1.3", optional = true}
wandb = {version = "^0.17.0", optional = true}
matplotlib = {version = "^3.7.1", optional = true}
seaborn = {version = "^0.12.2", optional = true}
jupyter = {version = "^1.0.0", optional = true}
ipython = {version = "^8.12.0", optional = true}
eche = "^0.2.1"
dask-jobqueue = "*"
dask-ml = "^2024.4.4"
dask-tfidf = "^0.0.1"


[tool.poetry.group.dev.dependencies]
ipdb = "^0.13.9"
mypy = "^1.5.1"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
nox-poetry = "^1.0.0"
pytest-mock = "^3.7.0"
toml = "^0.10.2"
strawman = "^0.1.2"
pyroma = {git = "https://github.com/CAM-Gerlach/pyroma.git", rev = "improve-pep-517-approach"}
ruff = "^0.1.9"
jupyter-black = "^0.3.4"
graphviz = "^0.20.1"
jupyter-contrib-nbextensions = "^0.7.0"
memray = "^1.9.1"
rich = "^13.6.0"
paramiko = "^3.3.1"
scp = "^0.14.5"
autorank = "^1.1.3"
colorizelatextables = "^1.1"


[tool.poetry.extras]
docs = ["mkdocs", "mkdocs-material", "mkdocstrings", "mkdocs-literate-nav", "mkdocs-gen-files", "mkdocs-section-index"]
all = ["transformers","torch","fasttext-wheel","gensim","click","wandb","matplotlib","seaborn","jupyter","ipython","dask","pyarrow","sentence-transformers"]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core>=1",
]

[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
ignore = ["E111", "E114", "E117", "E501", "D1", "D203", "D213", "D206", "D300", "Q000", "Q001", "Q002", "Q003", "COM812", "COM819", "ISC001","ISC002", "B905", "W191", "PLR0913", "PLR0912"]
#select = ["B", "C", "E", "F", "W", "B", "I", "D", "UP", "A", "C4", "T10", "ICN", "PIE", "PYI", "PT", "RET", "SIM", "ERA", "PD", "PGH", "PL", "NPY", "PERF", "RUF"]

[tool.ruff.lint.mccabe]
max-complexity = 18

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.cruft]
skip = ["src/klinker/__init__.py", "tests/", "README.md", "docs/"]
